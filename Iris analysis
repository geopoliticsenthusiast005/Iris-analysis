
"""
Assignment: Data Analysis with Pandas & Matplotlib
Author: Your Name
"""

# ==============================
# Import Libraries
# ==============================
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.datasets import load_iris

sns.set(style="whitegrid")

# ==============================
# Task 1: Load and Explore Dataset
# ==============================
def load_data():
    try:
        iris = load_iris(as_frame=True)
        df = iris.frame
        print("✅ Dataset successfully loaded!")
        return df, iris
    except FileNotFoundError:
        print("❌ File not found. Please check the file path.")
        return None, None
    except Exception as e:
        print(f"⚠️ Error loading dataset: {e}")
        return None, None

df, iris = load_data()

if df is not None:
    print("\n--- First 5 rows ---")
    print(df.head())

    print("\n--- Dataset Info ---")
    print(df.info())

    print("\n--- Missing Values ---")
    print(df.isnull().sum())

    # Clean dataset (fill missing with mean if needed)
    df.fillna(df.mean(numeric_only=True), inplace=True)

# ==============================
# Task 2: Basic Data Analysis
# ==============================
if df is not None:
    print("\n--- Descriptive Statistics ---")
    print(df.describe())

    # Group by species target
    species_mean = df.groupby("target").mean()
    print("\n--- Mean values by Species ---")
    print(species_mean)

    # Map species names
    df["species"] = df["target"].map(dict(zip(range(3), iris.target_names)))

    print("\n--- Average Petal Length per Species ---")
    print(df.groupby("species")["petal length (cm)"].mean())

# ==============================
# Task 3: Data Visualization
# ==============================
if df is not None:
    # Line Chart: Petal length across samples
    plt.figure(figsize=(10, 5))
    plt.plot(df.index, df["petal length (cm)"], label="Petal Length", color="blue")
    plt.title("Line Chart: Petal Length Across Samples")
    plt.xlabel("Sample Index")
    plt.ylabel("Petal Length (cm)")
    plt.legend()
    plt.show()

    # Bar Chart: Avg petal length per species
    plt.figure(figsize=(8, 5))
    sns.barplot(x="species", y="petal length (cm)", data=df, ci=None, palette="viridis")
    plt.title("Bar Chart: Avg Petal Length per Species")
    plt.xlabel("Species")
    plt.ylabel("Average Petal Length (cm)")
    plt.show()

    # Histogram: Distribution of Sepal Length
    plt.figure(figsize=(8, 5))
    plt.hist(df["sepal length (cm)"], bins=15, color="orange", edgecolor="black")
    plt.title("Histogram: Distribution of Sepal Length")
    plt.xlabel("Sepal Length (cm)")
    plt.ylabel("Frequency")
    plt.show()

    # Scatter Plot: Sepal length vs. Petal length
    plt.figure(figsize=(8, 5))
    sns.scatterplot(x="sepal length (cm)", y="petal length (cm)", hue="species", data=df, palette="deep")
    plt.title("Scatter Plot: Sepal Length vs. Petal Length")
    plt.xlabel("Sepal Length (cm)")
    plt.ylabel("Petal Length (cm)")
    plt.legend(title="Species")
    plt.show()

# ==============================
# Observations
# ==============================
print("\n--- Findings ---")
print("1. Iris-setosa has significantly smaller petal lengths than the other species.")
print("2. Sepal length shows a roughly normal distribution.")
print("3. Strong correlation observed between sepal length and petal length.")
print("4. Data is clean with no missing values after preprocessing.")
